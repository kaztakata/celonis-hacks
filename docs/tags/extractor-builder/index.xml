<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extractor Builder on Celonis hacks</title>
    <link>https://kaztakata.github.io/celonis-hacks/tags/extractor-builder/</link>
    <description>Recent content in Extractor Builder on Celonis hacks</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 Feb 2022 10:05:51 +0900</lastBuildDate><atom:link href="https://kaztakata.github.io/celonis-hacks/tags/extractor-builder/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tune Endpoint Parameter Relevant to Delta Load</title>
      <link>https://kaztakata.github.io/celonis-hacks/posts/2022-02-05-tune-endpoint-parameter-relevant-to-delta-load/</link>
      <pubDate>Sat, 05 Feb 2022 10:05:51 +0900</pubDate>
      
      <guid>https://kaztakata.github.io/celonis-hacks/posts/2022-02-05-tune-endpoint-parameter-relevant-to-delta-load/</guid>
      <description>Until last post Setup Dependent Endpoint in Extractor Builder, I prepared endpoints of both Planio Issues and their journals. Today I would like to tackle final setup of extractor to deal with Delta Load option.
Referring to the Planio Documentation, updated_on column exists for filtering Issues. This timestamp column is updated when creating and updating relevant issue, so it is appropriate column for Delta Load. Open Celonis Extractor builder then go to 4 Define Endpoints.</description>
    </item>
    
    <item>
      <title>Setup Dependent Endpoint in Extractor Builder</title>
      <link>https://kaztakata.github.io/celonis-hacks/posts/2022-01-29-setup-dependent-endpoint-in-extractor-builder/</link>
      <pubDate>Sat, 29 Jan 2022 09:17:16 +0900</pubDate>
      
      <guid>https://kaztakata.github.io/celonis-hacks/posts/2022-01-29-setup-dependent-endpoint-in-extractor-builder/</guid>
      <description>In the last post Configure Endpoint for Suitable Extraction, I configured Endpoint in Extractor Builder to suit my business requirements, and still there are points to extract change history of issues, and to extract data by Delta Load option. Today I would like to setup regarding change history using Dependent Endpoint in Extractor Builder.
At first how do I extract change history of Planio Issue ? Again I looked at Planio Documentation and found I can get single issue with journals (meaning change history in Planio).</description>
    </item>
    
    <item>
      <title>Configure Endpoint for Suitable Extraction</title>
      <link>https://kaztakata.github.io/celonis-hacks/posts/2022-01-22-configure-endpoint-for-suitable-extraction/</link>
      <pubDate>Sat, 22 Jan 2022 08:08:39 +0900</pubDate>
      
      <guid>https://kaztakata.github.io/celonis-hacks/posts/2022-01-22-configure-endpoint-for-suitable-extraction/</guid>
      <description>In the last post Connect to Source System via REST API, I shared how to set up Extractor Builder and extracted Issue from Planio. It was shortest path to be avaiable for extraction job, so it is not enough for production job. Today I would like to configure Endpoint in Extractor Builder to resolve problems I experienced.
First problem I faced is upper limit of extraction data. Some day I found that I could not get issue record until 25.</description>
    </item>
    
    <item>
      <title>Connect to Source System via REST API</title>
      <link>https://kaztakata.github.io/celonis-hacks/posts/2022-01-15-connect-to-source-system-via-rest-api/</link>
      <pubDate>Sat, 15 Jan 2022 10:27:09 +0900</pubDate>
      
      <guid>https://kaztakata.github.io/celonis-hacks/posts/2022-01-15-connect-to-source-system-via-rest-api/</guid>
      <description>At previous post Prepare Source System to Generate Event Log, I prepared Planio as source system for this blog, and entered few events (create Issue, update Issue Status) to it. Now it is time to extract event log from Planio. As other SaaS solution do, Planio also has REST API to extract data from outside. Currently Celonis EMS has ability to extract from arbitrary system that has REST API, Extractor Builder.</description>
    </item>
    
  </channel>
</rss>
